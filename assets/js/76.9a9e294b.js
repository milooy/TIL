(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{546:function(e,t,n){"use strict";n.r(t);var o=n(54),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"daily-codewars-30"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#daily-codewars-30"}},[e._v("#")]),e._v(" Daily Codewars #30")]),e._v(" "),n("h2",{attrs:{id:"question"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#question"}},[e._v("#")]),e._v(" Question")]),e._v(" "),n("p",[e._v("http://www.codewars.com/kata/5286a298f8fc1b7667000c1c/train/javascript\nGoal")]),e._v(" "),n("p",[e._v("The goal is to count the number of words, chars and lines in a block of text. [Pretty much like the wc command].")]),e._v(" "),n("p",[e._v("Fill the parse method so that the 3 counters (wordCount, charCount & lineCount) are properly setted in the DocumentParser object.")]),e._v(" "),n("p",[e._v("Helper")]),e._v(" "),n("p",[e._v("In order to handle large blocks of text, you do not receive any string in the constructor or in the parse method.")]),e._v(" "),n("p",[e._v("Instead, you receive a Reader instance as a parameter of your DocumentParser constructor.")]),e._v(" "),n("p",[e._v("This reader expose only one method : getChunk()")]),e._v(" "),n("p",[e._v("Returns the following fragment of text from the file it is reading\nReturns a string of random size\nReturns at least one char\nReturns an empty string when finished\nConstraints")]),e._v(" "),n("p",[e._v("You have to call getChunk as many times as needed to fully read the file.\nYou cannot concatenete calls to getChunk: to simulate limited memory, each chunk must be parsed individually.\nRegex are not allowed.\nTechnical note: This is to simulate the processing of every kind of file, especially huge files that cannot fits into memory.")]),e._v(" "),n("p",[e._v("Word boundaries")]),e._v(" "),n("p",[e._v("What is a word ? Keep it simple :")]),e._v(" "),n("p",[e._v('Words are separated with one or more space character(s), examples:\n"Hello world" is 2 words\n"Hello   world" is 2 words\n"mother-in-law" is 1 word\nLines are separated with "\\n"\nControl character \\n should be ignored in the character count\nPunctuation is correctly located: no need to parse punctuation\nExamples')]),e._v(" "),n("p",[e._v('"Hello World"')]),e._v(" "),n("p",[e._v('Chars: 11\nWords: 2\nLines: 1\n"Is it me, or you?"')]),e._v(" "),n("p",[e._v('Chars: 17\nWords: 5\nLines: 1\n"You can try, but you\'ll never catch me.\\nBazinga!"')]),e._v(" "),n("p",[e._v("Chars: 47\nWords: 9 (you'll = 1 word)\nLines: 2")])])}),[],!1,null,null,null);t.default=a.exports}}]);