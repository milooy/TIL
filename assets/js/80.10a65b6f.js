(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{550:function(t,e,s){"use strict";s.r(e);var a=s(54),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"github-actions로-vuepress-배포하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions로-vuepress-배포하기"}},[t._v("#")]),t._v(" GitHub Actions로 Vuepress 배포하기")]),t._v(" "),s("p",[t._v("2020.07.28")]),t._v(" "),s("p",[t._v("이 글을 쓴 TIL 사이트는 "),s("a",{attrs:{href:"https://vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuepress"),s("OutboundLink")],1),t._v("로 말아져 있당\n커스텀하기 편하고 가볍다.\n정적 사이트 장점을 살려 GitHub Pages에 배포해뒀다.")]),t._v(" "),s("p",[t._v("사이트를 배포하는 가장 기본적인 방법은\n매번 글을 작성할때마다 로컬에서 빌드 -> gh-pages 브랜치에 force push 하는건디\n증맬 귀찮은 일이다.")]),t._v(" "),s("p",[t._v("package.json에 deploy 스크립트를 만들어서 가-끔 생각날때마다 돌려주곤 했는데...")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('"scripts": {\n    "dev": "vuepress dev documents",\n    "build": "vuepress build documents",\n    "commit": "vuepress build documents && git add build -f && git commit -m \'Subtree commit\'",\n    "deploy": "git push origin `git subtree split --prefix build master`:gh-pages --force"\n  },\n')])])]),s("p",[t._v("GitHub Actions를 사용해\n코드를 푸시할때마다 자동으로 위 스크립트가 돌도록 업데이트를 해봤다.\n(그전까진 왜 안한겨.. 생각보다 나의 참을성이 좋구머잉)")]),t._v(" "),s("p",[t._v("하는법 간단히 기록해두기~")]),t._v(" "),s("h2",{attrs:{id:"step-1-vuepress로-사이트를-만든다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-vuepress로-사이트를-만든다"}},[t._v("#")]),t._v(" Step 1: Vuepress로 사이트를 만든다")]),t._v(" "),s("p",[t._v("다큐멘테이션 보면 금방 만들어용 https://vuepress.vuejs.org/\n다 만들면 GitHub 저장소에 푸시하셈.")]),t._v(" "),s("h2",{attrs:{id:"step-2-저장소에-github-pages-세팅하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-저장소에-github-pages-세팅하기"}},[t._v("#")]),t._v(" Step 2: 저장소에 GitHub Pages 세팅하기.")]),t._v(" "),s("p",[t._v("저장소 Settings탭 -> GitHub Pages 섹션에 가서\nSource를 'gh-pages'로 바꾼다. 그러면 gh-pages브랜치에 있는 index.html 읽어서 사이트를 보여줌.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/3839771/88663984-56446f80-d117-11ea-9653-5c8a6d3a9d42.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"step-3-workflow-파일-생성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-workflow-파일-생성"}},[t._v("#")]),t._v(" Step 3: workflow 파일 생성")]),t._v(" "),s("p",[t._v("저장소 루트에 "),s("code",[t._v(".github/workflows/main.yml")]),t._v(" 파일을 만든다. main말고 원하는 다른 이름 써도 무방.")]),t._v(" "),s("p",[t._v("아래 코드를 복사하고 저장한다.\njenkey2011이란 깃헙 유저가 배포한 action 가져다 쓴거다.\nhttps://github.com/marketplace/actions/vuepress-deploy")]),t._v(" "),s("p",[t._v("Dockerfile, Docker Hub 이라고 생각함 될듯. 선언적 문법 매력적이다. 일해라 절해라 적어두기.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/milooy/TIL/blob/master/.github/workflows/main.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("main.yaml"),s("OutboundLink")],1),t._v(" 참고")]),t._v(" "),s("h2",{attrs:{id:"step-4-github-저장소에-환경변수-세팅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-4-github-저장소에-환경변수-세팅"}},[t._v("#")]),t._v(" Step 4: GitHub 저장소에 환경변수 세팅")]),t._v(" "),s("p",[t._v("위 yaml 파일 보면 "),s("code",[t._v("ACCESS_TOKEN")]),t._v("를 쓰는데, GitHub 저장소에 ACCESS_TOKEN 환경변수를 세팅해줘야 한다.")]),t._v(" "),s("p",[t._v("먼저 내가 나라는걸 증명하는 프라이빗 토큰을 발급받자.\n"),s("code",[t._v("Settings > Developer settings > Personal access tokens")]),t._v("에 들어가\nhttps://github.com/settings/tokens")]),t._v(" "),s("p",[t._v("Generate new token 하면 된다(기존에 만들어놨다면 재활용 해도 된다)\n"),s("img",{attrs:{src:"https://user-images.githubusercontent.com/3839771/88664767-893b3300-d118-11ea-95cc-93a962eef299.png",alt:"image"}})]),t._v(" "),s("p",[t._v("이렇게 만든 토큰을\n"),s("code",[t._v("저장소 Settings > Secrets > New secret")]),t._v("에 key는 "),s("code",[t._v("ACCESS_TOKEN")]),t._v("라 적고 value에 토큰을 복사 붙여넣기 하면 된다. 고럼 yaml 파일이 돌면서 저장소 환경변수를 참고해감.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/3839771/88664600-437e6a80-d118-11ea-969e-b07d88bcf008.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"step-5-happy-til-ing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-5-happy-til-ing"}},[t._v("#")]),t._v(" Step 5: Happy TIL-ing!")]),t._v(" "),s("p",[t._v("yaml 파일을 GitHub에 올린다. 코드를 Push할때마다 자동으로 GitHub액션이 돌며 위에 선언한 Yaml코드가 실행된다.\n저장소 Actions 탭에서 확인 가능!")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/3839771/88665046-f949b900-d118-11ea-9934-de8c9f1858a5.png",alt:"image"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);